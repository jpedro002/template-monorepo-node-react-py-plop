generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider                  = "zod-prisma-types"
  output                    = "../src/schemas/zod"
  createRelationValuesTypes = false
  createPartialTypes        = true
  addInputTypeValidation    = true
  validateWhereUniqueInput  = true
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  role       Role
  name       String     @db.VarChar(90)
  createdAt  DateTime   @default(now())
  user_cards UserCard[]

  @@map("users")
}

enum Role {
  ADMIN
  NURSE
  // PATIENT
}

model UserCard {
  id        Int      @id @default(autoincrement())
  userId    Int
  cardId    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  card Card @relation(fields: [cardId], references: [id])

  @@map("user_cards")
}

model Card {
  id         Int      @id @default(autoincrement())
  cardNumber String   @unique
  cardType   String
  createdAt  DateTime @default(now())

  user_cards UserCard[]

  @@map("cards")
}

model Patient {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(90)
  createdAt DateTime @default(now())

  @@map("patients")
}
