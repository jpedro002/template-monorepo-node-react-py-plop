
services:
  frontend:
    container_name: frontend_prod_hospital
    image: jpedro002/hospital-frontend:latest
    env_file:
      - ./front-end/.env
    ports:
      - "4175:80"
    restart: always

  api:
    container_name: api_node_prod_hospital
    image: jpedro002/hospital-api-node:latest
    env_file:
      - ./api-node/.env
    ports:
      - "3002:3000"
    restart: always
    depends_on:
      - postgresql
    networks:
      - my_network_hospital
    environment:
      - NODE_ENV=production

  postgresql:
    container_name: postgresql_hospital_db
    image: bitnami/postgresql:latest
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_PORT_NUMBER=${POSTGRESQL_PORT_NUMBER}
    ports:
      - "5434:5432"
    volumes:
      - postgresql_data:/bitnami/postgresql
    networks:
      - my_network_hospital

  python:
    container_name: api_python_prod_hospital
    image: jpedro002/hospital-python:latest
    restart: always
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=production
    networks:
      - my_network_hospital

volumes:
  postgresql_data:
    driver: local
  shared_data:
    driver: local

networks:
  my_network_hospital:
    driver: bridge